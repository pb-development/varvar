{
  "project": "var2-project",
  "varsion": "1.0.0",
  "log": 1,
  "is_short_name": true,
  "rule": {
    "case": "snake",
    "var_case": "snake",
    "func_case": "snake",
    "propaty_case": "snake",
    "class_case": "snake",
    "coding_rule": {
      "indent": 2,
      "if-else-ifelse": {
        "ifの後ろにスペースを記述する。": true,
        "elseif, elseの前後にスペースを記述する。": true,
        "開きカッコ { , 閉じカッコ } は、if, elseif, elseと同じ行に記述する。": true,
        "最後のとじカッコは本文の最後の次の行に記述する。": true
      },
      "swith-case": {
        "switch, caseの後ろにスペースを1つあける。": true,
        "case文はswitch文からインデントする。": true,
        "breakはcase文の中の本文と同じインデントで記述する。": true,
        "意図的にbreakを記述せずに処理をスルーさせる場合は、「//no break」のようにコメントを記述する。": true,
        "最後の閉じカッコは本文の最後の次の行に記述する。": true
      },
      "foreach": {
        "for, foreachの後ろに1つスペースを記述。": true,
        "(forの場合)セミコロンの後ろは1つスペースを記述。": true,
        "開きカッコ { はforと同じ行に記述。": true,
        "最後の閉じカッコは本文の最後の次の行に記述。": true
      },
      "while": {
        "whileの後ろにスペースを1つ記述。": true,
        "開きカッコはwhileと同じ行に記述。": true,
        "doの後ろにスペースを1つ記述。": true,
        "do-whileの場合、whileの前後にスペースを1つ記述。": true,
        "最後のとじカッコは本文の次の行に記述。": true
      },
      "try-catch": {
        "tryの後ろに1つスペースを記述。": true,
        "catchの前後に1つスペースを記述。": true,
        "try,catchと同じ行に開きカッコ、閉じカッコは記述。": true,
        "最後の閉じカッコは本文の最後の行に記述。 ": true
      },
      "closure": {
        "functionの後ろにスペースを1つ記述する。": true,
        "useの前後にスペースを1つ記述する。": true,
        "開きカッコはfunctionと同じ行に記述する。": true,
        "最後の閉じカッコは本文の最後の次の行に記述する。": true,
        "引数の開きカッコの後ろにスペースを記述してはいけない。": true,
        "引数の閉じカッコの前にスペースを記述してはいけない。": true,
        "引数の前にスペースは記述してはいけない。": true,
        "引数の各カンマの後はスペースを記述する。": true,
        "デフォルトの値を持つ引数は最後に記述する。": true,
        "引数は、インデントにより揃えて複数行に記述してもよい。その場合は、最初の記述も次の行からはじめて1行に1つの引数を記述する。 引数を複数行に記述する場合、開きカッコ「{」は引数の閉じカッコ「)」と同じ行に記述する。": true,
        "クロージャが引数に直接記述された場合も同様のルールとなる。": true
      }
    }
  }
}
